# The port on which the Sentinel should run
port 5000

# AUTH password for the sentinel
requirepass 1841e88255c4b855a570dc540d9d02a1c491f94f7c8e4696be9a7f6fc1c12f82

# monitor the Primary on a specific IP address and port. Having the address of the Primary the Sentinels will be able to discover all the replicas on their own. The last argument on this line is the number of Sentinels needed for quorum. In our example - the number is 2.
sentinel monitor myprimary 192.168.1.11 6379 2

# how many milliseconds should an instance be unreachable so that itâ€™s considered down
sentinel down-after-milliseconds myprimary 5000

# if a Sentinel voted another Sentinel for the failover of a given master, it will wait this many milliseconds to try to failover the same master again.
sentinel failover-timeout myprimary 60000

# In order for Sentinels to connect to Redis server instances when they are configured with requirepass, the Sentinel configuration must include the sentinel auth-pass directive.
sentinel auth-pass myprimary 1841e88255c4b855a570dc540d9d02a1c491f94f7c8e4696be9a7f6fc1c12f82

# However this is not enough if you are using Redis ACLs (for Redis version
# 6 or greater), and the default user is not capable of running the PSYNC
# command and/or other commands needed for replication. In this case it's
# better to configure a special user to use with replication, and specify the
# masteruser configuration as such:
#
masteruser default
#
# When masteruser is specified, the replica will authenticate against its
# master using the new AUTH form: AUTH <username> <password>.

#
# Redis configuration file example
# https://redis.io/docs/latest/operate/oss_and_stack/management/config-file/
#

#
# redis-server ./sentinel1.conf --sentinel
# redis-cli -p 5000
#
# SENTINEL master myprimary
# SENTINEL replicas myprimary
# SENTINEL sentinels myprimary
# SENTINEL get-master-addr-by-name myprimary
